' ErrorCategory describes where the error comes from (Linker, Compiler, Module etc)
' ErrorType describes what error it is
' ErrorValue describes what caused the Error
Sub AL_ErrorPrint(ByVal ErrorCategory As Integer, ByVal ErrorType As Integer, Optional ByVal ErrorValue1 As Variant = 0, ByVal Optional ErrorValue2 As Variant = 0)

    AL_ErrorInitialize
    Dim ErrorCategoryString As String
    ErrorCategoryString = AL_ErrorGetCategory(ErrorCategory)
    Do Until AL_Error_Range.Offset(AL_Error_Index, 0).Formula = ""
        AL_Error_Index = AL_Error_Index + 1
    Loop
        AL_Error_Range.Offset(AL_Error_Index, 0).Formula = ErrorCategory
        AL_Error_Range.Offset(AL_Error_Index, 1).Formula = ErrorCategoryString
        AL_Error_Range.Offset(AL_Error_Index, 2).Formula = ErrorType
        AL_Error_Range.Offset(AL_Error_Index, 3).Formula = AL_ErrorLib_Range.Offset(ErrorType, 3 + (ErrorCategory * 5 - 5)).Formula
        If ErrorValue1 = 0 Then
                AL_Error_Range.Offset(AL_Error_Index, 4).Formula = "No_Error"
            Else
                AL_Error_Range.Offset(AL_Error_Index, 4).Formula = ErrorValue1
        End If
        If ErrorValue2 = 0 Then
                AL_Error_Range.Offset(AL_Error_Index, 5).Formula = "No_Error"
            Else
                AL_Error_Range.Offset(AL_Error_Index, 5).Formula = ErrorValue2
        End If

End Sub